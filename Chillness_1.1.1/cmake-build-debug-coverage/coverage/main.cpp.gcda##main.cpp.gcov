        -:    0:Source:/home/egorchan/CLionProjects/Chillness_1.1.1/main.cpp
        -:    0:Graph:/home/egorchan/CLionProjects/Chillness_1.1.1/cmake-build-debug-coverage/CMakeFiles/Chillness_1.1.1.dir/main.cpp.gcno
        -:    0:Data:/home/egorchan/CLionProjects/Chillness_1.1.1/cmake-build-debug-coverage/CMakeFiles/Chillness_1.1.1.dir/main.cpp.gcda
        -:    0:Runs:1
        -:    1:#include <iostream>
        -:    2:#include <cstdlib>
        -:    3:#include <vector>
        -:    4:#include <cmath>
        -:    5:#include <chrono>
        -:    6:
        -:    7:
        -:    8:#include <SFML/Graphics.hpp>
        -:    9:#include <SFML/System.hpp>
        -:   10:#include <SFML/Window.hpp>
        -:   11:#include <SFML/Audio.hpp>
        -:   12:#include <SFML/Network.hpp>
        -:   13:
        -:   14:using std::vector;
        -:   15:using std::cout;
        -:   16:using std::endl;
        -:   17:
        -:   18://Global variables---------------------
        -:   19:unsigned int height = 1500;
        -:   20:unsigned int width = 2000;
        -:   21:unsigned int population = 5;
        -:   22://Cell class--------------------------------------------------------
        -:   23:class Animal
        -:   24:{
        -:   25:public:
        -:   26:    int x;
        -:   27:    int y;
        -:   28:    int x_stable;
        -:   29:    int y_stable;
        -:   30:
        -:   31:public:
        -:   32:    sf::CircleShape picture;
        -:   33:
        5:   34:    Animal(){
        5:   34-block  0
        5:   35:        this->x = 0;
        5:   36:        this->y = 0;
        5:   37:        this->x_stable = 0;
        5:   38:        this->y_stable = 0;
        5:   39:    };
        -:   40:
     9410:   41:    void set_position(int a, int b){
     9410:   42:        this->x = a;
     9410:   43:        this->y = b;
     9410:   44:        picture.setPosition(a, b);
     9410:   44-block  0
     9410:   45:    }
        -:   46:
        5:   47:    void set_stable_position(int a, int b){
        5:   48:        this->x_stable = a;
        5:   49:        this->y_stable = b;
        5:   50:    }
        -:   51:};
        -:   52:
        -:   53://Definition for functions---------------
        -:   54:
        -:   55:
        -:   56://Game class--------------------------------------------------------
        -:   57:class Game
        -:   58:{
        -:   59:private:
        -:   60:    //Private variables
        -:   61:    sf::RenderWindow* window;
        -:   62:    sf::VideoMode videoMode;
        -:   63:    sf::Event ev;
        -:   64:
        -:   65:    //Game objects
        -:   66:    sf::RectangleShape enemy;
        -:   67:
        -:   68:    //Private functions
        -:   69:    void initVariables();
        -:   70:    void initWindow();
        -:   71:    void initEnemies();
        -:   72:public:
        -:   73:    //Public functions
        -:   74:    Game();
        -:   75:    virtual ~Game();
        -:   76:
        -:   77:    const bool running() const;
        -:   78:    void pollEvents();
        -:   79:    vector<Animal> update(vector<Animal> group);
        -:   80:    void render(vector <Animal> group);
        -:   81:};
        -:   82://------------------------------------------------------------------
        -:   83:
        -:   84:
        -:   85://Functions definitions:
        1:   86:void Game::initVariables() {
        1:   87:    this->window = nullptr;
        1:   88:}
        -:   89:
        1:   90:void Game::initWindow() {
        1:   91:    this->videoMode.height = height;
        1:   92:    this->videoMode.width = width;
        1:   93:    this->window = new sf::RenderWindow(this->videoMode, "Chillness 1.1.1", sf::Style::Titlebar | sf::Style::Close);
        1:   93-block  0
        1:   93-block  1
        1:   93-block  2
        1:   93-block  3
    $$$$$:   93-block  4
    $$$$$:   93-block  5
    $$$$$:   93-block  6
    $$$$$:   93-block  7
    $$$$$:   93-block  8
    $$$$$:   93-block  9
        1:   94:    this->window->setFramerateLimit(40);
        -:   95:
        1:   96:}
        -:   97:
       1*:   98:Game::~Game() {
        1:   99:    delete this->window;
       1*:  100:}
------------------
_ZN4GameD0Ev:
    #####:   98:Game::~Game() {
        -:   99:    delete this->window;
    #####:  100:}
    %%%%%:  100-block  0
------------------
_ZN4GameD2Ev:
        1:   98:Game::~Game() {
        1:   98-block  0
        1:   99:    delete this->window;
        1:   99-block  0
        1:   99-block  1
        1:  100:}
------------------
        -:  101:
        1:  102:Game::Game() {
        1:  102-block  0
    $$$$$:  102-block  1
    $$$$$:  102-block  2
        1:  103:    this->initVariables();
        1:  103-block  0
        1:  104:    this->initWindow();
        1:  105:    this->initEnemies();
        1:  105-block  0
        1:  106:}
        1:  106-block  0
        -:  107:
     1883:  108:const bool Game::running() const {
     1883:  109:    return this->window->isOpen();
     1883:  109-block  0
        -:  110:}
        -:  111:
     2160:  112:void Game::pollEvents() {
     2160:  113:    while (this->window->pollEvent(this->ev))
     2160:  113-block  0
      278:  113-block  1
        -:  114:    {
      278:  115:        switch(this->ev.type){
      278:  115-block  0
        1:  116:            case sf::Event::Closed:
        1:  117:                this->window->close();
        1:  117-block  0
        1:  118:                break;
    #####:  119:            case sf::Event::KeyPressed:
    #####:  120:                if (this->ev.key.code == sf::Keyboard::Escape)
    %%%%%:  120-block  0
    #####:  121:                    this->window->close();
    %%%%%:  121-block  0
    #####:  122:                break;
    %%%%%:  122-block  0
        -:  123:
        -:  124:        }
        -:  125:    }
     1882:  126:}
        -:  127:
     1882:  128:vector<Animal> Game::update(vector<Animal> group) {
     1882:  129:    this->pollEvents();
     1882:  129-block  0
        -:  130:    int x_mouse, y_mouse;
     1882:  131:    x_mouse = sf::Mouse::getPosition(*this->window).x;
     1882:  132:    y_mouse = sf::Mouse::getPosition(*this->window).y;
        -:  133:    //std::cout << "Mouse: " << x_mouse << " " << y_mouse << std::endl;
     1882:  134:    if (x_mouse >= 0 and y_mouse >= 0 and x_mouse <= this->videoMode.width and y_mouse <= this->videoMode.height){
     1882:  134-block  0
      499:  134-block  1
      426:  134-block  2
      426:  135:        this->enemy.setFillColor(sf::Color::Red);
      426:  135-block  0
      426:  136:        this->enemy.setPosition(x_mouse, y_mouse);
        -:  137:
        -:  138:    }
     1456:  139:    else this->enemy.setFillColor(sf::Color::Green);
     1456:  139-block  0
        -:  140:
    11292:  141:    for(int i = 0; i < population; i++){
     1882:  141-block  0
    11292:  141-block  1
     9410:  142:        group[i].set_position(group[i].x_stable + 10*sin(ceil(clock()/2000)), group[i].y_stable + 10*sin(ceil(clock()/1500 + i)));
     9410:  142-block  0
        -:  143:    }
     1882:  144:    cout << group[1].picture.getPosition().x << endl;
     1882:  144-block  0
     1882:  145:    return group;
        -:  146:}
        -:  147:
     1882:  148:void Game::render(vector<Animal> group) {
        -:  149:
     1882:  150:    this->window->clear(sf::Color(40, 10, 40, 255));
     1882:  150-block  0
     1882:  151:    this->window->draw(this->enemy);
     1882:  151-block  0
    11292:  152:    for (int i = 0; i < population; i++){
    11292:  152-block  0
        -:  153:
     9410:  154:        this->window->draw(group[i].picture);
     9410:  154-block  0
        -:  155:    }
     1882:  156:    this->window->display();
     1882:  156-block  0
        -:  157:
     1882:  158:}
        -:  159:
        1:  160:void Game::initEnemies() {
        1:  161:    this->enemy.setSize(sf::Vector2(10.f, 10.f));
        1:  161-block  0
    $$$$$:  161-block  1
        1:  162:    this->enemy.setFillColor(sf::Color::Magenta);
        1:  162-block  0
        1:  163:    this->enemy.setOutlineColor(sf::Color::Green);
        1:  164:    this->enemy.setOutlineThickness(1.f);
        1:  165:    this->enemy.setOrigin(sf::Vector2(5.f, 5.f));
        -:  166:    //this->enemy.setPosition();
        1:  167:}
        1:  167-block  0
        -:  168:
        1:  169:vector<Animal> createAnimals(vector<Animal> group) {
        6:  170:    for (int i = 0; i < population;  i++){
        1:  170-block  0
        6:  170-block  1
        5:  171:        group[i].set_stable_position(rand()%width, rand()%height);
        5:  171-block  0
        5:  172:        group[i].picture.setRadius(10.f);
        5:  173:        group[i].picture.setFillColor(sf::Color::Blue);
        -:  174:    }
        1:  175:    return group;
        1:  175-block  0
        -:  176:}
        -:  177:
        -:  178:
        -:  179://------------------------------------------------------GAME LOOP-------------------------------------------------------
        1:  180:int main() {
        2:  181:    vector<Animal> group(population);
        1:  181-block  0
    $$$$$:  181-block  1
    $$$$$:  181-block  2
        1:  182:    group.reserve(population);
        1:  183:    group = createAnimals(group);
        1:  183-block  0
        1:  183-block  1
        1:  183-block  2
    $$$$$:  183-block  3
    $$$$$:  183-block  4
        -:  184:    //Init Game
        1:  185:    Game game;
    $$$$$:  185-block  0
        -:  186:
        -:  187:    //Game loop
     1883:  188:    while(game.running())
     1883:  188-block  0
     1883:  188-block  1
        -:  189:    {
        -:  190:
        -:  191:        //Update
     1882:  192:        group = game.update(group);
     1882:  192-block  0
     1882:  192-block  1
     1882:  192-block  2
    $$$$$:  192-block  3
    $$$$$:  192-block  4
     1882:  193:        cout << group[1].picture.getPosition().x << endl;
     1882:  193-block  0
     1882:  193-block  1
        -:  194:        //Render
        -:  195:
     1882:  196:        game.render(group);
     1882:  196-block  0
     1882:  196-block  1
     1882:  196-block  2
    $$$$$:  196-block  3
    $$$$$:  196-block  4
        -:  197:    }
        -:  198:
        1:  199:    return 0;
        1:  199-block  0
        -:  200:}
